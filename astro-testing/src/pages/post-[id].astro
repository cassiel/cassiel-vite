---
import { getCollection } from 'astro:content'
import { type CollectionEntry } from 'astro:content'

// No idea why the entries don't have .render() as per all the examples.
// @ts-ignore
import { render } from 'astro:content'

type Entry = CollectionEntry<'blog'>

// Not actually needed, but:
interface Props {
    entry: Entry
}

export async function getStaticPaths() {
    const entries = await getCollection('blog')
    /** params is probably essential because Astro has to enumerate
        the generated routes. Am not sure about props - but it
        can't be an arbitrary label. */
    return entries.map((e: Entry) => ({ params: { id: e.id },
                                        props: { entry: e }}))
}

// Unused (we aren't doing getEntry()):
//const { id } = Astro.params

const { entry } = Astro.props
const { Content, headings } = await render(entry)
---
<pre>{ JSON.stringify(headings) }</pre>
<Content />
